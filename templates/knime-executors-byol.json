{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "Unique name for the scale set. Must be 3-61 characters in length and unique across the VNet."
      },
      "maxLength": 61
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "vName of the existing virtual network to deploy the scale set into."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet to deploy the scale set into."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      },
      "defaultValue": "knimeadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      },
      "defaultValue": "knimeknime1234!"
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "defaultValue": 1,
      "maxValue": 100
    },
    "knimeServerHost": {
      "type": "string",
      "metadata": {
        "description": "Host name or IP address of the KNIME Server server (or RabbitMQ if both are hosted on the same server). A private address is preferred."
      }
    },
    "knimeServerPort": {
      "type": "string",
      "metadata": {
        "description": "Port of the KNIME Server server (or RabbitMQ if both are hosted on the same server)."
      }
    },
    "rabbitmqVHost": {
      "type": "string",
      "metadata": {
        "description": "The name of the RabbitMQ virtual host (vhost) containing the KNIME Server and KNIME Executor application queues."
      },
      "defaultValue": "knime-server"
    },
    "rmqServerHost": {
      "type": "string",
      "metadata": {
        "description": "Host name or IP address of the RabbitMQ server (if RabbitMQ is not hosted on the same server as the KNIME Server). A private address is preferred."
      }
    },
    "rmqServerPort": {
      "type": "string",
      "metadata": {
        "description": "Port of the RabbitMQ server (if RabbitMQ is not hosted on the same server as the KNIME Server)."
      }
    },
    "rabbitmqUser": {
      "type": "string",
      "metadata": {
        "description": "The RabbitMQ user name for the vhost."
      },
      "defaultValue": "knime"
    },
    "rabbitmqPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The RabbitMQ password for the given user."
      },
      "defaultValue": "knime"
    },
    "executorGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the Executor Group to assign to all Executors in this scaling group."
      }
    },
    "executorResources": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "A comma delimited list of Executor resources used for pinning or routing workflows to an Executor."
      }
    },
    "heapUsagePercentLimit": {
      "type": "int",
      "defaultValue": 90,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "A limit on the percentage of heap usage by the Executor. When this limit is exceeded, the Executor will stop accepting jobs."
      }
    },
    "cpuUsagePercentLimit": {
      "type": "int",
      "defaultValue": 90,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "A limit on the percentage of CPU usage by the Executor. When this limit is exceeded, the Executor will stop accepting jobs."
      }
    }
  },
  "variables": {
    "imageLocation": "https://knimeserverpackervms.blob.core.windows.net/system/Microsoft.Compute/Images/marketplace-images/KExec-4.2.2-byol-osDisk.39e4c231-0cab-4713-ace0-2397d0153245.vhd",
    "l01": "#cloud-config\n",
    "l02": "output : { all : '| tee -a /var/log/cloud-init-output.log' }\n",
    "l03": "write_files:\n",
    "l04": "  - owner: knime:knime\n",
    "l05": "    path: /var/opt/knime-executor.config\n",
    "l06": "    content: |\n",
    "l07": "[concat('      KNIME_SERVER_HOST=', parameters('knimeServerHost'), '\n')]",
    "l08": "[concat('      KNIME_SERVER_PORT=', parameters('knimeServerPort'), '\n')]",
    "l09": "[concat('      KNIME_VIRTUAL_HOST=', parameters('rabbitmqVHost'), '\n')]",
    "l10": "[concat('      KNIME_RMQ_SERVER_HOST=', parameters('rmqServerHost'), '\n')]",
    "l11": "[concat('      KNIME_RMQ_SERVER_PORT=', parameters('rmqServerPort'), '\n')]",
    "l12": "[concat('      KNIME_RMQ_USER=', parameters('rabbitmqUser'), '\n')]",
    "l13": "[concat('      KNIME_RMQ_PASSWORD=', parameters('rabbitmqPassword'), '\n')]",
    "l14": "[concat('      KNIME_EXECUTOR_GROUP=', parameters('executorGroup'), '\n')]",
    "l15": "[concat('      KNIME_EXECUTOR_RESOURCES=', parameters('executorResources'), '\n')]",
    "l16": "[concat('      KNIME_EXECUTOR_HEAP_USAGE_PERCENT_LIMIT=', parameters('heapUsagePercentLimit'), '\n')]",
    "l17": "[concat('      KNIME_EXECUTOR_CPU_USAGE_PERCENT_LIMIT=', parameters('cpuUsagePercentLimit'), '\n')]",
    "l18": "runcmd:\n",
    "l19": "  - /home/knime/executor-utils/configure_executor.sh\n",
    "customData": "[concat(variables('l01'),variables('l02'),variables('l03'),variables('l04'),variables('l05'),variables('l06'),variables('l07'),variables('l08'),variables('l09'),variables('l10'),variables('l11'),variables('l12'),variables('l13'),variables('l14'),variables('l15'),variables('l16'),variables('l17'),variables('l18'),variables('l19'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmssName')]",
      "location": "westeurope",
      "sku": {
        "name": "[parameters('vmSku')]",
        "capacity": "[parameters('instanceCount')]"
      },
      "plan": {
        "name": "knime-executor-byol-4_2",
        "publisher": "knime",
        "product": "knime-executor-byol"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Rolling"
        },
        "automaticRepairsPolicy": {
          "enabled": "true",
          "gracePeriod": "PT30M"
        },
        "singlePlacementGroup": "true",
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "publisher": "knime",
              "offer": "knime-executor-byol",
              "sku": "knime-executor-byol-4_2",
              "version": "latest"
            },
            "osDisk": {
              "osType": "Linux",
              "createOption": "FromImage",
              "caching": "ReadWrite"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "[base64(variables('customData'))]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": false,
                "provisionVMAgent": true
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubNetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT15M",
              "enable": true
            }
          },
          "extensionProfile": {
            "extensions": [
              {
                "type": "extensions",
                "name": "KNIMEExecutorHealthExtension",
                "properties": {
                  "publisher": "Microsoft.ManagedServices",
                  "type": "ApplicationHealthLinux",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "1.0",
                  "settings": {
                    "protocol": "http",
                    "port": 8080,
                    "requestPath": "/health"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}
