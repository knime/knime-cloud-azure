{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "Unique name for the scale set. Must be 3-61 characters in length and unique across the VNet."
      },
      "maxLength": 61
    },
    "minNumberOfInstances": {
      "type": "int",
      "metadata": {
        "description": "The minimum number of VM instances wanted in the VMSS (100 or less)."
      },
      "defaultValue": 1,
      "maxValue": 100
    },
    "maxNumberOfInstances": {
      "type": "int",
      "metadata": {
        "description": "The maximum number of VM instances wanted in the VMSS (100 or less)."
      },
      "defaultValue": 4,
      "maxValue": 100
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      },
      "defaultValue": "knimeadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      },
      "defaultValue": "knimeknime1234!"
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "vName of the existing virtual network to deploy the scale set into."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet to deploy the scale set into."
      }
    },
    "serverHost": {
      "type": "string",
      "metadata": {
        "description": "Host name or IP address of the KNIME or RabbitMQ Server. A private address is preferred."
      }
    },
    "rmqVHost": {
      "type": "string",
      "metadata": {
        "description": "The name of the RabbitMQ virtual host (vhost) containing the KNIME Server and KNIME Executor application queues."
      },
      "defaultValue": "knime-server"
    },
    "rmqUser": {
      "type": "string",
      "metadata": {
        "description": "The RabbitMQ user name for the vhost."
      },
      "defaultValue": "knime"
    },
    "rmqPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The RabbitMQ password for the given user."
      },
      "defaultValue": "knime"
    },
    "executorGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the Executor Group to assign to all Executors in this scaling group."
      }
    },
    "executorResources": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "A comma delimited list of Executor resources used for pinning or routing workflows to an Executor."
      }
    },
    "heapUsagePercentLimit": {
      "type": "int",
      "defaultValue": 90,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "A limit on the percentage of heap usage by the Executor. When this limit is exceeded, the Executor will stop accepting jobs."
      }
    },
    "cpuUsagePercentLimit": {
      "type": "int",
      "defaultValue": 90,
      "minValue": 0,
      "maxValue": 100,
      "metadata": {
        "description": "A limit on the percentage of CPU usage by the Executor. When this limit is exceeded, the Executor will stop accepting jobs."
      }
    }
  },
  "variables": {
    "imageLocation": "https://knimeserverpackervms.blob.core.windows.net/system/Microsoft.Compute/Images/marketplace-images/KExec-4.2.2-byol-osDisk.39e4c231-0cab-4713-ace0-2397d0153245.vhd",
    "l01": "#cloud-config\n",
    "l02": "output : { all : '| tee -a /var/log/cloud-init-output.log' }\n",
    "l03": "write_files:\n",
    "l04": "  - owner: knime:knime\n",
    "l05": "    path: /var/opt/knime-executor.config\n",
    "l06": "    content: |\n",
    "l07": "[concat('      KNIME_SERVER_HOST=', parameters('serverHost'), '\n')]",
    "l08": "[concat('      KNIME_VIRTUAL_HOST=', parameters('rmqVHost'), '\n')]",
    "l09": "[concat('      KNIME_RMQ_USER=', parameters('rmqUser'), '\n')]",
    "l10": "[concat('      KNIME_RMQ_PASSWORD=', parameters('rmqPassword'), '\n')]",
    "l11": "[concat('      KNIME_EXECUTOR_GROUP=', parameters('executorGroup'), '\n')]",
    "l12": "[concat('      KNIME_EXECUTOR_RESOURCES=', parameters('executorResources'), '\n')]",
    "l13": "[concat('      KNIME_EXECUTOR_HEAP_USAGE_PERCENT_LIMIT=', parameters('heapUsagePercentLimit'), '\n')]",
    "l14": "[concat('      KNIME_EXECUTOR_CPU_USAGE_PERCENT_LIMIT=', parameters('cpuUsagePercentLimit'), '\n')]",
    "l15": "runcmd:\n",
    "l16": "  - /home/knime/executor-utils/configure_executor.sh\n",
    "customData": "[concat(variables('l01'),variables('l02'),variables('l03'),variables('l04'),variables('l05'),variables('l06'),variables('l07'),variables('l08'),variables('l09'),variables('l10'),variables('l11'),variables('l12'),variables('l13'),variables('l14'),variables('l15'),variables('l16'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmssName')]",
      "location": "westeurope",
      "sku": {
        "name": "[parameters('vmSku')]",
        "capacity": "[parameters('minNumberOfInstances')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Rolling"
        },
        "automaticRepairsPolicy": {
          "enabled": "true",
          "gracePeriod": "PT30M"
        },
        "singlePlacementGroup": "true",
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "name": "ExecutorOS",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "image": {
                "uri": "[variables('imageLocation')]"
              }
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "[base64(variables('customData'))]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": false,
                "provisionVMAgent": true
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubNetName'))]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT15M",
              "enable": true
            }
          },
          "extensionProfile": {
            "extensions": [
              {
                "type": "extensions",
                "name": "KNIMEExecutorHealthExtension",
                "properties": {
                  "publisher": "Microsoft.ManagedServices",
                  "type": "ApplicationHealthLinux",
                  "autoUpgradeMinorVersion": true,
                  "typeHandlerVersion": "1.0",
                  "settings": {
                    "protocol": "http",
                    "port": 8080,
                    "requestPath": "/health"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion": "2015-04-01",
      "name": "[concat(parameters('vmssName'), '-autoscale-by-CPU-percent')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName'))]"
      ],
      "properties": {
        "name": "[concat(parameters('vmssName'), '-autoscale-by-CPU-percent')]",
        "enabled": true,
        "targetResourceLocation": "westeurope",
        "targetResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
        "profiles": [
          {
            "name": "Executor-scaling-profile-1",
            "capacity": {
                "minimum": "[parameters('minNumberOfInstances')]",
                "maximum": "[parameters('maxNumberOfInstances')]",
                "default": "[parameters('minNumberOfInstances')]"
            },
            "rules": [
              {
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT10M"
                },
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                  "operator": "GreaterThan",
                  "statistic": "Average",
                  "threshold": 70,
                  "timeAggregation": "Average",
                  "timeGrain": "PT1M",
                  "timeWindow": "PT5M"
                }
              },
              {
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT10M"
                },
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricResourceUri": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
                  "operator": "LessThanOrEqual",
                  "statistic": "Average",
                  "threshold": 30,
                  "timeAggregation": "Average",
                  "timeGrain": "PT1M",
                  "timeWindow": "PT5M",
                  "dividePerInstance": false
                }
              }
            ]
          }
        ]
      }
    }
  ]
}
